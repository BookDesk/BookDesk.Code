@model PagedList.IPagedList<BuySellOldBooks.Models.Book>
@using PagedList.Mvc;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<html xmlns="http://www.w3.org/1999/xhtml">
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BookDesk";
}

@*We are using "Html.Encode" here to Prevent from a Sequrity Threat - XSS (Cross Site Scripting)*@
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <title></title>
    <style>
        .Text {
            font-family: Verdana, Arial, Sans-serif, 'Times New Roman';
            font-size: 8pt;
            font-weight: normal;
            font-style: normal;
            color: #333333;
            text-decoration: none;
        }

        .toolTip {
            font-family: Verdana, Arial, Sans-serif, 'Times New Roman';
            font-size: 8pt;
            filter: alpha(opacity=100);
            -moz-opacity: 100;
            opacity: 100;
            /* comment the above 3 line if you don't want transparency*/
        }
    </style>
</head>

<body onload="initToolTips();">
    <div id="toolTipLayer" style="position:absolute; visibility: hidden;left:0;right:0"></div>
    <div id="dialog-edit" style="display: none;height:300px; ">
    </div>
    @using (Html.BeginForm("SearchBooks", "Book", FormMethod.Get))
    {
        <div style="width:100%">
            <div style="float:none;width:95%">
                @foreach (var item in Model)
                {
                    <div class="panel panel-default">
                        <div style="background-color:#FBED8F;font-family:Arial, Helvetica, sans-serif; font-size:15px;text-decoration:none;">
                            @{
                    if (TempData["MsgSentFlag"] == "1")
                    {
                        <p>An E-Mail has been sent successfully.</p>
                    }
                    //Display confirmation message when password has changes successfully.
                    else if (TempData["changePasswordSucceededFlag"] == "1")
                    {
                        <p>Password has been changed successfully.</p>
                    }
                    TempData["MsgSentFlag"] = "0";
                    TempData["changePasswordSucceededFlag"] = "0";
                            }
                        </div>

                        <div class="panel-body">
                            <table width="100%">
                                <tr>
                                    <td align="left" colspan="4">
                                        <table width="100%" cellpadding="5" cellspacing="0">
                                            <tr>
                                                @if (ViewBag.SpecialStatus == "1")
                                                {
                                                    <td> <img src="~/Images/special-offer-icon.png" /></td>
                                                    <td align="left" class="text1" width="80%" style="color:#0262AC" onmouseover="show('/images/BookImages/'+@item.State+'.jpg')" onmouseout="toolTip()">@Html.Encode(Html.DisplayFor(modelItem => item.Title))</td>
                                                    <td class="price" width="20%" valign="top">For Sale:  @Html.Encode(Html.DisplayFor(modelItem => item.Price)) </td>
                                                }
                                                else
                                                {
                                                    if (item.EntryDateTime.Month == DateTime.Now.Month)
                                                    {
                                                        <td> <img src="~/Images/justArrived1.png" /></td>
                                                    }
                                                    else
                                                    {
                                                        <td> <img src="~/Images/BookIcon.png" /></td>
                                                    }

                                                    <td align="left" class="text1" width="80%" onmouseover="show('/images/BookImages/'+@item.State+'.jpg')" onmouseout="toolTip()">@Html.Encode(Html.DisplayFor(modelItem => item.Title))</td>
                                                    <td class="price" width="20%" valign="top">For Sale:  @Html.Encode(Html.DisplayFor(modelItem => item.Price)) </td>
                                                }
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="text3" width="25%">Author:</td>
                                    <td align="left" class="text2" width="35%">@Html.Encode(Html.DisplayFor(modelItem => item.Author))</td>
                                    <td align="left" class="text3" width="20%">Edition:</td>
                                    <td align="left" class="text2" width="20%">@Html.Encode(Html.DisplayFor(modelItem => item.Edition))</td>
                                </tr>
                                <tr>
                                    <td align="left" class="text3" width="25%">Publisher:</td>
                                    <td align="left" class="text2" width="35%">@Html.Encode(Html.DisplayFor(modelItem => item.Publisher))</td>
                                    <td align="left" class="text3" width="20%">Year:</td>
                                    <td align="left" class="text2" width="20%">@Html.Encode(Html.DisplayFor(modelItem => item.Year))</td>
                                </tr>
                                @{
                                                BuySellOldBooks.DataAccessLayer.PustakContext db = new BuySellOldBooks.DataAccessLayer.PustakContext();
                                                var userContact = from userDetails in db.Users where userDetails.UserId == item.UserId select userDetails;
                                                foreach (var userInfo in userContact)
                                                {
                                                    <tr>
                                                        <td></td>
                                                    </tr>
                                                    <tr>
                                                        @*TRACE: We can create customViewModel here to access user information also from Book Model*@
                                                        <td align="left" class="text3">Location of Book:</td>
                                                        <td align="left" class="text2">@Html.Encode(Html.DisplayFor(modelItem => item.Locality)), @Html.Encode(Html.DisplayFor(modelItem => item.City))</td>
                                                        <td align="left" class="text3">Book Owner:</td>
                                                        <td align="left" class="text2">@Html.Encode(Html.DisplayFor(modelItemUser => userInfo.NickName))</td>
                                                    </tr>
                                                    <tr>
                                                        <td align="left" class="text3">Phone:</td>
                                                        <td align="left" class="text2">@Html.Encode(Html.DisplayFor(modelItemUser => userInfo.Phone))</td>
                                                        <td align="right" class="text2" colspan="2">
                                                            @Html.ActionLink("Contact Book Owner(Send Mail)", "SendEmailMessage", "EmailMessage", new { id = item.BookID }, new { @class = "buttonContact", @id = "openDialog" })
                                                        </td>
                                                    </tr>
                                                }
                                }
                                <tr><td align="left" colspan="4" style="border-bottom:1px solid #cccccc;">&nbsp;</td></tr>
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    <div>@Html.PagedListPager(Model, page => Url.Action("SearchBooks", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))</div>

</body>
</html>

<link href="@Url.Content("~/Content/themes/base/minified/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.20.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $.ajaxSetup({ cache: false });
        $("#openDialog").live("click", function (e) {
            var url = $(this).attr('href');
            $("#dialog-edit").dialog({
                title: 'Contact to Book Owner - Send an Email',
                autoOpen: false,
                resizable: false,
                height: 300,
                width: 550,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: false,
                autoscroll: false,
                open: function (event, ui) {
                    $(this).load(url);
                },
                close: function (event, ui) {
                    $(this).dialog('close');
                }
            });

            $("#dialog-edit").dialog('open');
            return false;
        });
    });
</script>

<script language="javascript" defer="false">
    //browser detection
    var agt = navigator.userAgent.toLowerCase();
    var is_major = parseInt(navigator.appVersion);
    var is_minor = parseFloat(navigator.appVersion);

    var is_nav = ((agt.indexOf('mozilla') != -1) && (agt.indexOf('spoofer') == -1)
                && (agt.indexOf('compatible') == -1) && (agt.indexOf('opera') == -1)
                && (agt.indexOf('webtv') == -1) && (agt.indexOf('hotjava') == -1));
    var is_nav4 = (is_nav && (is_major == 4));
    var is_nav6 = (is_nav && (is_major == 5));
    var is_nav6up = (is_nav && (is_major >= 5));
    var is_ie = ((agt.indexOf("msie") != -1) && (agt.indexOf("opera") == -1));
</script>
<script language="JavaScript">
    //tooltip Position
    var offsetX = -500;
    var offsetY = 0;
    var opacity = 70;
    var toolTipSTYLE;

    function initToolTips() {
        if (document.getElementById) {
            toolTipSTYLE = document.getElementById("toolTipLayer").style;
        }
        if (is_ie || is_nav6up) {
            toolTipSTYLE.visibility = "visible";
            toolTipSTYLE.display = "none";
            document.onmousemove = moveToMousePos;
        }
    }
    function moveToMousePos(e) {
        if (!is_ie) {
            x = e.pageX;
            y = e.pageY;
        } else {
            x = event.x + document.body.scrollLeft;
            y = event.y + document.body.scrollTop;
        }

        toolTipSTYLE.left = x + offsetX + 'px';
        toolTipSTYLE.top = y + offsetY + 'px';
        return true;
    }
    function toolTip(msg, fg, bg) {
        if (toolTip.arguments.length < 1) // if no arguments are passed then hide the tootip
        {
            if (is_nav4)
                toolTipSTYLE.visibility = "hidden";
            else
                toolTipSTYLE.display = "none";
        }
        else // show
        {
            if (!fg) fg = "#777777";
            if (!bg) bg = "#ffffe5";
            var content = '<table border="0" cellspacing="0" cellpadding="0" class="toolTip"><tr><td bgcolor="' + fg + '">' +
                                          '<table border="0" cellspacing="1" cellpadding="0"<tr><td bgcolor="' + bg + '">' +
                                          '<font face="sans-serif" color="' + fg + '" size="-2">' + msg +
                                          '</font></td></tr></table>' +
                                          '</td></tr></table>';
            if (is_nav4) {
                toolTipSTYLE.document.write(content);
                toolTipSTYLE.document.close();
                toolTipSTYLE.visibility = "visible";
            }

            else if (is_ie || is_nav6up) {
                document.getElementById("toolTipLayer").innerHTML = content;
                toolTipSTYLE.display = 'block'
            }
        }
    }

    function show(imgPath) {
        s = '<table width="100%"  cellspacing="2" cellpadding="0" border="0">';
        s += '<tr><td><img src="' + imgPath + '" border="0"  width="240" height="340"/> </td></tr>';
        s += '</table>'
        toolTip(s, imgPath)
    }
</script>













